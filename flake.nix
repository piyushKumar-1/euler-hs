# Autogenerated from euler.yaml. Do not edit.
# hash: f488d4c3f2e036ddacb075bbf6ff7f1ef63d592d82110cc45f0603abfed29a6c
# time: 2020-10-21 15:58:01.798796

{
  description = "euler-hs";
  inputs = {
    # Laziness of nix allows us to be lazy hear and not to resolve deps
    # The downside is that most of this .follows are redundant
    euler-build.inputs.beam.follows = "beam";
    euler-build.inputs.beam-mysql.follows = "beam-mysql";
    euler-build.inputs.haskell-sequelize.follows = "haskell-sequelize";
    beam.inputs.euler-build.follows = "euler-build";
    beam.inputs.beam-mysql.follows = "beam-mysql";
    beam.inputs.haskell-sequelize.follows = "haskell-sequelize";
    beam-mysql.inputs.euler-build.follows = "euler-build";
    beam-mysql.inputs.beam.follows = "beam";
    beam-mysql.inputs.haskell-sequelize.follows = "haskell-sequelize";
    haskell-sequelize.inputs.euler-build.follows = "euler-build";
    haskell-sequelize.inputs.beam.follows = "beam";
    haskell-sequelize.inputs.beam-mysql.follows = "beam-mysql";
  };

  outputs = flakeInputs@{ self, euler-build, ... }:
    euler-build.mkEulerFlake {
      overlayPath = ./nix/overlay.nix;
      mkConfig = { nixpkgs }: {
        flakeName = "euler-hs";
        defaultPackageName = "euler-hs";
        exportPackages = [
          "euler-hs"
        ];
        shellTools = with nixpkgs; [
          
        ];
        # shellAttrs = {
        # };
      };
      inputs = flakeInputs;
    };
}
